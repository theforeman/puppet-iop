load_module /usr/lib64/nginx/modules/ngx_http_perl_module.so;

user nginx;
worker_processes auto;
#error_log /var/log/nginx/error.log;
#error_log /dev/stdout debug;
error_log /dev/stdout info;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Use x-request-id if passed otherwise generate one
    map $http_x_request_id $x_rh_insights_request_id_value {
        default $request_id;
        ""      $request_id;
        ~.+     $http_x_request_id;
    }

    perl_modules /etc/nginx/perl;
    perl_require identity.pl;
    perl_set $identity identity::set_identity_header;

    #access_log /var/log/nginx/access.log main;
    access_log /dev/stdout;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 8443 ssl;

        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;
        ssl_client_certificate /etc/nginx/certs/ca.crt;
        ssl_verify_client on;
        ssl_verify_depth 2;

        proxy_set_header x-rh-identity $identity;
        include common.conf;

    }


}

