proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header Authorization "";
proxy_set_header x-rh-insights-request-id $x_rh_insights_request_id_value;

proxy_request_buffering off;
proxy_buffering off;

set $ingress "iop-core-ingress:8080";
set $advisor "iop-service-advisor-backend-api:8000";
set $hbi "iop-core-hbi-web:8081";
set $remediations "iop-service-remediations-api:9002";
set $vulnerability "iop-service-vuln-manager:8000";

# podman subnet, specified in the compose or systemd files
# or defined when running podman network create
resolver 10.130.0.1;

location / {
    return 200 'OK';
}

location /api/ingress {
    proxy_pass http://$ingress;
}

location /api/remediations {
    proxy_pass http://$remediations;
}

location /api/insights {
    proxy_pass http://$advisor;
}

location /r/insights/ {
    proxy_pass http://$advisor;
}

location /api/inventory {
    proxy_pass http://$hbi;
}

location /tags {
    proxy_pass http://$hbi;
}

location /api/vulnerability {
    proxy_pass http://$vulnerability;
}

location /r/insights/uploads {
    rewrite ^/r/insights/uploads(?:/.*)?$ /api/ingress/v1/upload break;
    proxy_pass http://$ingress;
}


location /r/insights/platform/ingress/v1/upload {
    rewrite ^/r/insights/platform/ingress/v1/upload(?:/.*)?$ /api/ingress/v1/upload break;
    proxy_pass http://$ingress;
}

location /api/module-update-router/v1/channel {
    default_type application/json;
    return 200 '{"url": "/release"}';
}

location /r/insights/v1/static/release/ {
    alias /usr/share/nginx/html/static/release/;
    try_files $uri $uri/ =404;
}

location /apps/ {
    alias /usr/share/nginx/html/frontends/;
    try_files $uri $uri/ =404;
}
